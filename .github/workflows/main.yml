name: test and deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  check_pep8:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10.4

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run PEP8 check
        run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

  run_tests:
    runs-on: ubuntu-latest
    env:
      DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install and run frontend tests
        working-directory: ./frontend
        run: |
          npm install
          npm run test

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10.4

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Run backend tests
        working-directory: ./backend
        run: pytest tests/

  build_and_push_images:
    runs-on: ubuntu-latest
    needs: [check_pep8, run_tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/kittygram_backend:latest ./backend
          docker push ${{ secrets.DOCKER_USERNAME }}/kittygram_backend:latest

      - name: Build and push frontend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/kittygram_frontend:latest ./frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/kittygram_frontend:latest

      - name: Build and push gateway image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/kittygram_gateway:latest ./gateway
          docker push ${{ secrets.DOCKER_USERNAME }}/kittygram_gateway:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_images
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /home/igruzdo/kittygram-final
            git pull origin main
            echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" > .env
            echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
            echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
            echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
            echo "POSTGRES_HOST=postgres" >> .env
            echo "POSTGRES_PORT=5432" >> .env
            docker-compose pull
            docker-compose build
            docker-compose up -d
            docker exec backend python manage.py collectstatic --noinput
            docker exec backend python manage.py migrate
            docker-compose restart

      - name: Notify in Telegram
        uses: appleboy/telegram-action@v1.6.0
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: "âœ… Deployment of Kittygram completed successfully!"
